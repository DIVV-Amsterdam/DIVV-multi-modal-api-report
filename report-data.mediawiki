Testdocument to include data-related content from end report...

=Introduction=
==Cause for the project==
Within the "Open Data game" Amsterdam defined that apps should be developed by the open market. The municipality is dedicated to the provision of Open Data. 

For some time there is a topic within the transport domain of the municipality that has specific political attention: the multimodal app. Until now, there have been no strong initiatives from the open market in this direction. To encourage such developments, DIVV wants to examine the development of a multimodal API. By bringing data from different modes of transport together the development of such apps are much easier. 

Our project focused on how to come to such an API, in this document we will described the approach we’ve used and the results it delivered.

==The Multi Modal Route Planner==

==Scope for project==
===Assignment===
Investigate the potential for DIVV to achieve a multimodal API with the current set of data sources and summarizes the conclusions in a presentation / report. 
===Implementation of the assignment===
#Determination of objectives and constraints:
In an interview with the client, the limits are established within which the API should be developed. Amongst other things, it shall be determined which resources are required and which ones should NOT be used.
#Catalogue of appropriate data sources:
In the widest perspective, it will be determined which data sources are suitable for the API.
#*Informationsubstantive aspects:
This concerns both the kind of information (auto, rail, metro, bus, walking, etc.) and the quality of information (intensity, update frequency, geographic coverage and granularity, etc.).
#*Technical aspects:
In what form and what formats the data sources are available. It also looks at the technical availability of the information and the opportunities to link and combine with the information of other sources.
#*Definition of the most likely use cases:
For a good design of the API, there should be a picture of how the API will be addressed by future apps. It is important to look at multiple appconcepts and to determine what would be dominant concepts in the market. This determines the technical structure of the API. 

In this case, we want to address the most likely use cases using the 80/20 rule. That is that 80% of the users can be satisfied with 20% of the functionality.
#Technical and functional investigation with proof of concept:

Based on the results of activity 3, an advise is made which data sets should be combined in the multimodal API. If necessary, a future growth path for further development will be outlined. During the process it is inevitable that a proof of concept API / mashup will be produced. This is not intended to be in any way a final product but it will provide the basis of the results.
#*For each use case it will be specified what information from what existing data sets and APIs are needed, and if and how these can be combined in one or more functions in the multimodal API.
#*We will attempt to connect to the sources and determineif the developer community will be able to use these easily.
#*Code and functions used will be documented with any deficiencies highlighted with notes for improvement
#*For each function it will be specified if this is feasible with the currently available data sets and APIs.
#*Finally, we will define the API that we would propose can make the multi‐modal API a reality
#Report on the most important data sources:
As a result of activity 4, we will document the data sources we think are necessary to make the multimodal API in more detail from an organizational perspective.
#*Financial aspects:

What are the direct costs and other financial conditions to for the use of the different data sources. Most of the time the intensity of the data usages is crucial.
#*Strategic aspects:

With which suppliers of data, the municipality of Amsterdam can or can NOT cooperate. An estimate is also made of what the next two years is expected in the field of available datasets.
#*Organizational and operational aspects: 

It can be assumed that the organization that provides the data in the future will continue to do so under the same conditions.
#Intermediate reports:

Every two weeks coordination will take place with the client on the progress of the investigation.
#Final report: 

The results of this project will be summarized in a presentation using slides and with practical demonstrations. This presentation will be discussed with the client.

=Modes of transport=
'''Bussen AMS/NH'''
Haltes, routes en kosten M
Alle planningen M
Alles real time M

'''Trams AMS'''
Haltes, routes en kosten M
Alle planningen M
Alles real time M

'''Pont AMS'''
Haltes, routes en kosten M
Alle planningen M
Alles real time M

'''Treinen NL'''
Haltes, routes en kosten M
Alle planningen M
Alles real time M

'''Metro AMS'''
Haltes, routes en kosten M
Alle planningen M
Alles real time M

'''Auto NL'''
Reguliere navigatie M
Rental (greenwheels/gar2go) M (locations only)
Files RT M
Wegonderhoud RT M
Parkeren parkeergebouwen RT M
Parkeren parkeerterreinen RT M
Parkeren straat (globaal) RT + K M

'''Fiets AMS'''
Reguliere navigatie M
++ Rental (OV)? M
Wegonderhoud RT M
Parkeerplaats RT + K M

'''Scooter AMS'''
Reguliere navigatie M
Wegonderhoud RT M
Parkeerplaats RT + K W

'''Motor AMS'''
Reguliere navigatie (same as car)
Files RT + / - "
Wegonderhoud RT "
Parkeren parkeergebouwen RT "
Parkeren parkeerterreinen RT "
Parkeren straat (globaal) RT + K "

'''Taxi AMS'''
Timer / cost estimation M
Standplaatsen M
information about rules and prices M

'''Lopen AMS'''
Reguliere navigatie M

'''On the way NH'''
Events which affect transport (e.g. marathon) M
Emergency Locations (e.g. police/hospital) M
Toilets W*
Meals W*
Tourist attractions W*
Hotels W*
events W*
* these should be available to choose destinations but won't be part of the planning api in any other way

'''Global options/User input'''
I prefer not to use certain modes of transport S
I am traveling with a family or a group, now tell me if this makes a difference C
I am disabled W

'''Additional items'''
In trip updates via non official sources M twitter etc..

The api data should be available to tom-tom and other in car routing companies in a format they can easily incorporate, Cor asked us to contact tom-tom and find out if there is a standard format.

==Overview of data==
<table>
<tr><th>Mode of transport</th><th>Type of info</th></tr>
<tr><td>All public Transport</td><td>Haltes</td></tr>
<tr><td></td><td>Routes</td></tr>
<tr><td></td><td>Costs</td></tr>
<tr><td></td><td>Planning/navigation</td></tr>
<tr><td></td><td>Delay</td></tr>
<tr><td></td><td>Location</td></tr>
<tr><td>Motorized traffic</td><td>Planning/navigation</td></tr>
<tr><td></td><td>Delay</td></tr>
<tr><td></td><td>Costs</td></tr>
<tr><td></td><td>Parking</td></tr>
<tr><td></td><td>Rental</td></tr>
<tr><td>Bike</td><td>Planning/navigation</td></tr>
<tr><td></td><td>Delay</td></tr>
<tr><td></td><td>Parking</td></tr>
<tr><td></td><td>Rental</td></tr>
<tr><td>Walking</td><td>Planning/navigation</td></tr>
<tr><td></td><td>Delay</td></tr>
<tr><td>Taxi</td><td>Planning/navigation</td></tr>
<tr><td></td><td>Location</td></tr>
<tr><td></td><td>Delay</td></tr>
<tr><td></td><td>Costs</td></tr>
<tr><td></td><td>Availability</td></tr>
<tr><td>Points of Interest</td><td>Location</td></tr>
</table>

=Use Cases=

For this report, we will focus on 5 scenario’s we have defined in accordance with IVV. As a rule of a thumb, these uses cases cover 80% of the need of travellers in the greater Amsterdam area.

;A) Frequent traveller.
: This person is probably on a normal route to work (or other regular journey), there is a delay somewhere in journey that can be avoided if they reroute NOW. This is also called the 'automatic' traveller.  The key points are that the traveller is familiar with the journey and leaves the margins between steps in the journey tight.  This traveller also knows about possible alternative routes already and only needs to know whether to divert or not on a particular day.
;B) The basic A -> B planner.
: This person is starting and ending their journey within Amsterdam (or its nearby surroundings).  They may be a resident or a frequent visitor.  They don't necessarily know the route they are planning, it may be to an appointment or to an event.  This person may currently use the OV9292 planner or something similar.
;C) The Amsterdam Visitor.
: This person is visiting Amsterdam from another town or city and can travel by car or train into the city.  They want to know how best to travel to Amsterdam and how to get from either the train station or parking garage to their final destination.  In addition to the route planning they find it important where they are going to leave their vehicle and the convenience of reaching their final destination.  They may not be aware of the difficulties of negotiating the city by car.
;D) The new tourist.
:This person is a tourist who arrives probably by Air at Schiphol and is not online yet, they need basic information about how to proceed with transportation within the city, for instance about buying on OV card. and how to get to their initial destination such as a hotel.
;E) The destination planner.
: This is a variation on the A -> B  planner but in this case they are attending an appointment and then traveling onward. For instance traveling, Having an appointment for 2 hours and then travelling on to a 3rd destination.  This may influence the type of transportation and the overall price.

===Excluded for now===
We have explicitly excluded some use case scenario’s for this report:
*Several people wanting to co-ordinate their trips with calendars

The challenges of connecting to different calendar formats would consume to much of the available developing time for this project.
*Disabled travellers on public transportation.

The information needed to realize this scenario properly is not yet available. Other parties focus on this challenge already.  (However parking spots for disabled drivers are included)

==Scenario A: Frequent traveller==
===Scenario===
This person is probably on a normal route to work (or other regular journey), there is a delay somewhere in journey that can be avoided if they reroute NOW. This is also called the 'automatic' traveller.  The key points are that the traveller is familiar with the journey and leaves the margins between steps in the journey tight.  This traveller also knows about possible alternative routes already and only needs to know whether to divert or not on a particular day.
===Tasks===
BASIC SCENARIO: Based on a specific route, transport modes and time frame, the scenario outputs whether everything is OK (‘No delay’) or there are delays on the route. For each delay the expected delay in minutes is provided. (In the basic scenario it’s up to the traveller to reroute)

EXTENDED/OPTIONAL: If the route is delayed, alternatives are planned and provided to the traveller.

*Input
**Identify regular routes
***By specifying your regular route (specific lines/routes/highways/etc.)
***or by route planning (OPTIONAL)
**Identify regular time frames
***By specifying regular timeframes
***or just for ‘now’
**Identify normal mode(s) of transport
**Identify available alternative modes of transport (OPTIONAL)
*Process
**Get planned delays
***For all modes of transport
**Get current delays
***For all modes of transport
**Calculate current timing for normal routes (OPTIONAL)
**Calculate current timing for alternatives (OPTIONAL)
*Output
**‘No delay’-message or overview of delays
**Provide alternative route(s) or mode(s) of transport (OPTIONAL)

===Data needed===
<table>
<tr><th>Mode of transport</th><th>Type of info</th><th>Needed for this scenario</tr>
<tr><td>All public Transport</td><td>Haltes</td><td>Required</td></tr>
<tr><td></td><td>Routes</td><td>Required</td></tr>
<tr><td></td><td>Costs</td><td>-</td></tr>
<tr><td></td><td>Planning/navigation</td><td>Optional (regular route can be input f.e. bus line)</td></tr>
<tr><td></td><td>Delay</td><td>-</td></tr>
<tr><td></td><td>Location</td><td>-</td></tr>
<tr><td>Motorized traffic</td><td>Planning/navigation</td><td>-</td></tr>
<tr><td></td><td>Delay</td><td>Required, both real-time and planned</td></tr>
<tr><td></td><td>Costs</td><td>-</td></tr>
<tr><td></td><td>Parking</td><td>-</td></tr>
<tr><td></td><td>Rental</td><td>Optional</td></tr>
<tr><td>Bike</td><td>Planning/navigation</td><td>Optional</td></tr>
<tr><td></td><td>Delay</td><td>Optional</td></tr>
<tr><td></td><td>Parking</td><td>-</td></tr>
<tr><td></td><td>Rental</td><td>Optional</td></tr>
<tr><td>Walking</td><td>Planning/navigation</td><td>Optional</td></tr>
<tr><td></td><td>Delay</td><td>-</td></tr>
<tr><td>Taxi</td><td>Planning/navigation</td><td>Optional</td></tr>
<tr><td></td><td>Location</td><td>-</td></tr>
<tr><td></td><td>Delay</td><td>= motorized traffic</td></tr>
<tr><td></td><td>Costs</td><td>Optional</td></tr>
<tr><td></td><td>Availability</td><td>Optional</td></tr>
<tr><td>Points of Interest</td><td>Location</td><td>-</td></tr>
</table>

[As it turns out, the .nl-domains for vertragingsalarm, vertragingalarm, vertragingsalert en vertragingalert are all still available]
==Scenario B: The basic A -> B planner==
===Scenario===
This person is starting and ending their journey within Amsterdam (or its nearby surroundings).  They may be a resident or a frequent visitor.  They don't necessarily know the route they are planning, it may be to an appointment or to an event.  This person may currently use the OV9292 planner or something similar.

===Tasks===
*Input
**Point/address A (Departure, start)
**Point/address B (Destination, end)
**Time (‘Now’ or time in future to start or end route)
**Available modes of transport (OPTIONAL)
**Time to stay (OPTIONAL, mainly for parking costs)
*Process
**Route planning
***Option 1: Simple
*Calculate routes for all modes of transport for complete route (from A to B)
***Option 2: Advanced
*Calculate routes for first mile (From A to predefined transport hubs), for all modes of transport specified for transport hub
*Calculate routes for last mile (From predefined transport hubs to B), for all modes of transport specified for transport hub
*Calculate routes for main route between transport hubs, for all modes of transport specified for transport hub
*Calculate best sums for total route
**Delay calculation
***If not included in the route planning, calculate current delays on planned routes
**Cost calculation
***For best X routes, calculate cost for used transport modes
**Prioritize routes
***Based on time, costs and distance, prioritize routes
*Output
**Overview of routes
***Start time, end time, total duration, distance, costs, transport mode(s), number of transfers
**Route details
***Turn-by-turn navigation

[N.B. For the real-time part ‘on the route’, scenario B (Extended) will be used to signal last minute alternatives]

===Data needed===
<table>
<tr><th>Mode of transport</th><th>Type of info</th><th>Needed for this scenario</tr>
<tr><td>All public Transport</td><td>Haltes</td><td>Required</td></tr>
<tr><td></td><td>Routes</td><td>Required</td></tr>
<tr><td></td><td>Costs</td><td>Required</td></tr>
<tr><td></td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Delay</td><td>Required/Optional&sup1;</td></tr>
<tr><td></td><td>Location</td><td>-</td></tr>
<tr><td>Motorized traffic</td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Delay</td><td>Required/Optional&sup1;</td></tr>
<tr><td></td><td>Costs</td><td>Required</td></tr>
<tr><td></td><td>Parking</td><td>Required</td></tr>
<tr><td></td><td>Rental</td><td>Optional</td></tr>
<tr><td>Bike</td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Delay</td><td>Required/Optional&sup1;</td></tr>
<tr><td></td><td>Parking</td><td>Optional</td></tr>
<tr><td></td><td>Rental</td><td>Optional</td></tr>
<tr><td>Walking</td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Delay</td><td>Required/Optional&sup1;</td></tr>
<tr><td>Taxi</td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Location</td><td>-</td></tr>
<tr><td></td><td>Delay</td><td>Required/Optional&sup1;</td></tr>
<tr><td></td><td>Costs</td><td>Required</td></tr>
<tr><td></td><td>Availability</td><td>Required/Optional&sup1;</td></tr>
<tr><td>Points of Interest</td><td>Location</td><td>Optional</td></tr>
</table>

&sup1; Even without real-time information on delay, this scenario may be of added value.
====Transport hubs====
Additional needs for the advanced route planning are ‘transport hubs’ within the greater Amsterdam Area. These are locations that facilitate the change of mode of transport. For example train stations, P+R, parking garages, etc.

[This needs more brainstorming. Each transport hub may have a set of transport modes for ‘inbound’ and ‘outbound’ traffic, may be a ‘reach’, etc.
Probably a complete list of transport hubs will be out of scope for this pilot, but we might consider doing a proof of concept on this point.]

==Scenario C: The Amsterdam Visitor==
===Scenario===
This person is visiting Amsterdam from another town or city and can travel by car or train into the city.  They want to know how best to travel to Amsterdam and how to get from either the train station or parking garage to their final destination.  In addition to the route planning they find it important where they are going to leave their vehicle and the convenience of reaching their final destination.  They may not be aware of the difficulties of negotiating the city by car.

===Tasks===
This scenario is similar to Scenario B, including the ‘simple’ calculation or the ‘advanced’ calculation for the last mile. (The first mile is out of scope, because this is outside the Amsterdam area).

*Additional input
**-
*Additional process
**-
*Additional output
**More information (or links to more information) on destination and/or transport hub. (F.e. information on ‘P+R’-system, use of OV-chip, rental bikes, parking tariffs, etc.)

===Data needed===
See ‘data needed’ for Scenario B.

==Scenario D: The new tourist==
===Scenario===
This person is a tourist who arrives probably by Air at Schiphol and is not online yet, they need basic information about how to proceed with transportation within the city, for instance about buying on OV card and how to get to their initial destination such as a hotel.
===Tasks===
*Input
**Current location
**Planned destination (POI/Address)
**Time (‘Now’ or time in future to start or end route)
**Available modes of transport (OPTIONAL, for ‘new tourist’ defaults to public transport and taxi, no car, no bike)
*Process
**Simple route planning
***Calculate routes for all modes of transport for complete route (from A to B)
**Cost calculation
***For best X routes, calculate cost for used transport modes
**Prioritize routes
***Based on time, costs and distance, prioritize routes
*Output
**Route planning
***Start time, end time, total duration, distance, costs, transport mode(s), number of transfers
***Turn-by-turn navigation
**Information on:
***Mode of transport (f.e. on how to get a Taxi)
***Cost and transactions (f.e. info on OV-chip and where to buy)
***Destination
***General information on travelling in Amsterdam

===Data needed===
<table>
<tr><th>Mode of transport</th><th>Type of info</th><th>Needed for this scenario</tr>
<tr><td>All public Transport</td><td>Haltes</td><td>Required</td></tr>
<tr><td></td><td>Routes</td><td>Required</td></tr>
<tr><td></td><td>Costs</td><td>Required</td></tr>
<tr><td></td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Delay</td><td>Optional</td></tr>
<tr><td></td><td>Location</td><td>-</td></tr>
<tr><td>Motorized traffic</td><td>Planning/navigation</td><td>-</td></tr>
<tr><td></td><td>Delay</td><td>-</td></tr>
<tr><td></td><td>Costs</td><td>-</td></tr>
<tr><td></td><td>Parking</td><td>-</td></tr>
<tr><td></td><td>Rental</td><td>-</td></tr>
<tr><td>Bike</td><td>Planning/navigation</td><td>-</td></tr>
<tr><td></td><td>Delay</td><td>-</td></tr>
<tr><td></td><td>Parking</td><td>-</td></tr>
<tr><td></td><td>Rental</td><td>-</td></tr>
<tr><td>Walking</td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Delay</td><td>-</td></tr>
<tr><td>Taxi</td><td>Planning/navigation</td><td>Required</td></tr>
<tr><td></td><td>Location</td><td>Required (static)</td></tr>
<tr><td></td><td>Delay</td><td>-</td></tr>
<tr><td></td><td>Costs</td><td>Required</td></tr>
<tr><td></td><td>Availability</td><td>Optional</td></tr>
<tr><td>Points of Interest</td><td>Location</td><td>Required</td></tr>
</table>
====Tourist information====
Apart from the transport data in the table above, additional tourist information on modes of transport, costs, transactions, destination and transport hubs is needed. Part of this information may be available through IVV, other parts may be available through ATCB or the IAmsterdam-website.

The gathering and editing of the actual content of this information is outside the scope of this project, for this Pilot we will use temporary information.

[To discuss: IMHO the solution to this problem is an application/product/service, not an API. Should we include the ‘static’ tourist information in the API?]

==Scenario E: The destination planner==
===Scenario===
This is a variation on the A -> B  planner but in this case they are attending an appointment and then traveling onward. For instance traveling, Having an appointment for 2 hours and then travelling on to a 3rd destination.  This may influence the type of transportation and the overall price.

===Tasks===
*Input
**Point/address A (Departure, start)
**Point/address B 
**Planned time to stay at B
**Point C + time to stay at C
**Point D + time to stay at D
**.. etc.
**Point/address Z (Destination, end)
**Time (‘Now’ or time in future to start or end route)
**Available modes of transport (OPTIONAL)
*Process
**Route planning
***Option 1: Simple (for all routes)
*Calculate routes for all modes of transport for all parts of the route (from A to B, B to C, C to D, D to Z)
***Option 2: Advanced (for all routes)
*Calculate routes for first miles (From A to predefined transport hubs, From B to … etc.), for all modes of transport specified for transport hub
*Calculate routes for last mile (From predefined transport hubs to B, from transport hub to C, etc. ), for all modes of transport specified for transport hub
*Calculate routes for main routes between transport hubs, for all modes of transport specified for transport hub
***Calculate best sums for total routes
**Delay calculation
***If not included in the route planning, calculate current delays on planned routes
**Cost calculation
***For best X routes, calculate cost for used transport modes
***For best X routes, calculate cost for staying the specified time
**Prioritize routes
***Based on time, costs and distance, prioritize routes
*Output
**Overview of routes
***Start time, end time, total duration, total distance, total costs, transport mode(s), total number of transfers
***For each part of route:
*Start time, end time, duration, distance, costs, transport mode(s), number of transfers
***For each stay:
*Start time, end time, costs
**Route details
***Turn-by-turn navigation

[N.B. For the real-time part ‘on the route’, scenario B (Extended) will be used to signal last minute alternatives]

===Data needed===
See ‘data needed’ for Scenario B.

=Current state of OV datasets for NL=
The ecosystem of OV datasets is still very young and somewhat immature - most of these platforms are less than a year old. Often documentation is insufficient, and can quickly get out of data as developments are fast. Many of the data formats are quite complex and require large amounts of domain knowledge. Some of the licenses are restrictive.

To cover Amsterdam, we would need data from Connexxion (CXX), EBS, GVB and NS, at this time. This may change as concessions change, but not for the next year at least.

==Currently available datasets==
Possibly interesting datasets for our project highlighted in bold.
<table>
<thead>
<tr>
<th><b>Dataset</b></th>
<th><b>Source</b></th>
<th><b>Geographic coverage</b></th>
<th><b>Frequency</b></th>
<th><b>Should respond to planned changes</b></th>
<th><b>Should respond to unplanned changes</b></th>
<th><b>Format in</b></th>
<th><b>Format out</b></th>
<th><b>License/price</b></th>
<th><b>Notes</b></th>
</tr>
</thead>
<tbody>
<tr>
<td><b>GTFS NL</b></td>
<td>9292</td>
<td>National, perhaps no trains</td>
<td>Unclear, does not seem up to date</td>
<td>No</td>
<td>No</td>
<td><br></td>
<td>GTFS</td>
<td>Free for now</td>
<td><br></td>
</tr>
<tr>
<td><b>KV1 for ARR CXX EBS GVB HTM QBUZZ SYNTUS VEOLIA RETBUS</b></td>
<td>9292</td>
<td>Depends on concessions</td>
<td>When service changes?</td>
<td>No</td>
<td>No</td>
<td><br></td>
<td>KV1</td>
<td>Free for now<br></td>
<td><br></td>
</tr>
<tr>
<td><b>KV6 for ARR CXX HTM</b></td>
<td>9292</td>
<td>Depends on concessions</td>
<td>Real-time</td>
<td>Yes</td>
<td>Up to certain extent?</td>
<td>Custom VPN</td>
<td>KV6</td>
<td>Custom SLA contract</td>
<td><br></td>
</tr>
<tr>
<td><b>KV15 for ARR CXX</b></td>
<td>9292</td>
<td>Depends on concessions<br></td>
<td>Real-time</td>
<td>Yes</td>
<td>Up to certain extent?</td>
<td>Custom VPN</td>
<td>KV15</td>
<td>Custom SLA contract</td>
<td><br></td>
</tr>
<tr>
<td><b>KV17 for CXX</b></td>
<td>9292</td>
<td>Depends on concessions<br></td>
<td>Daily?</td>
<td>Yes</td>
<td>No</td>
<td>Custom VPN</td>
<td>KV17</td>
<td>Custom SLA contract</td>
<td><br></td>
</tr>
<tr>
<td>RET</td>
<td>9292</td>
<td>Rotterdam</td>
<td>When service changes?</td>
<td><br></td>
<td><br></td>
<td><br></td>
<td>RET custom</td>
<td>Free for now</td>
<td><br></td>
</tr>
<tr>
<td><b>NS IFF</b></td>
<td>9292</td>
<td>National (NS)</td>
<td>When service changes?</td>
<td>No</td>
<td>No</td>
<td><br></td>
<td>IFF</td>
<td>Free for now</td>
<td><br></td>
</tr>
<tr>
<td><b>KV 7/8 turbo</b></td>
<td>GOVI</td>
<td>Missing parts of concessions ZH, Rotterdam, Arnhem, Gelderland, Twente, Friesland</td>
<td>Real-time, except GVB metro</td>
<td>Yes</td>
<td>Up to certain extent?<br></td>
<td>Custom VPN / MQ</td>
<td>KV 7/8</td>
<td>GOVI license</td>
<td><br></td>
</tr>
<tr>
<td>KV 55</td>
<td>GOVI</td>
<td>Same as KV78 GOVI<br></td>
<td>Real-time?</td>
<td>Probably</td>
<td>Up to certain extent?<br></td>
<td>Custom VPN / MQ</td>
<td>KV 55</td>
<td>GOVI license</td>
<td>Seems to be deprecated in favour of KV 7/8</td>
</tr>
<tr>
<td><b>KV1 ARR CXX EBS GVB HTM QBUZZ RET? SYNTUS VEOLIA</b></td>
<td>OpenOV</td>
<td>Depends on concessions</td>
<td>Unclear</td>
<td>No</td>
<td>No</td>
<td><br></td>
<td>KV1</td>
<td>CC0</td>
<td><br></td>
</tr>
<tr>
<td><b>KV 7/8 turbo on v0.ovapi.nl</b></td>
<td>OpenOV</td>
<td>Same as GOVI<br></td>
<td>Real-time, except GVB metro</td>
<td>Yes</td>
<td>Up to certain extent?</td>
<td>REST</td>
<td>JSON</td>
<td>Some CC0, some GOVI-license (~no stats, no logging)</td>
<td>On top of GOVI - might include KV15?</td>
</tr>
<tr>
<td><b>NS API</b></td>
<td>NS</td>
<td>NS service area, covers the Dutch Hoofdrailnet and some smaller lines.</td>
<td>Real-time</td>
<td>Yes</td>
<td>Yes</td>
<td>REST</td>
<td>Custom XML</td>
<td>Custom license, only display facts about future trips, no judgements</td>
<td>Includes pricing calculations</td>
</tr>
</tbody>
</table>

==Observations of KV78Turbo from OpenOV for GVB trams==
I've built a small app in the past using OpenOV KV78Turbo data (which comes from GOVI). A few observations I've made in GVB trams:
<UL>
<LI>Most of the time, the data is correct and up-to-date. Trams which are not available ("geen dienst") are not included (and should not be).</LI>
<LI>Occasionally, all real-time data disappears: according to the data, there are no vehicles on the line.</LI>
<LI>Delays are properly registered. However, GOVI uses an algorithm that the delay will slowly be caught up with after a while, meaning that 10 stops later, the trip is expected to be on schedule again. However, in my experience, delayed trams never catch up, and often get delayed more, due to slower boarding at stops. Therefore, the GOVI algorithm is too optimistic in the expected arrival time of later stops for a tram which is known to be delayed.</LI>
<LI>Planned changes, like shortening or rerouting a line due to the marathon, are perfectly picked up. All data is correctly updated.</LI>
<LI>Unplanned changes, like a temporary detour due to a traffic accident, are not picked up at all. The tram is basically completely missing as long as it's not following it's regular route: it will stay on "driving to &lt;first stop after devation&gt;". The data becomes really weird in some cases, dropping stops which will still be passed later, until the tram reports at one of it's regular stops again. After that, all data recovers. I think this is because GVB does not actually register detours like this properly in their systems, as they are short and a bit unpredictable.</LI>
<LI>In (so far) rare occasions, very strange things happen with the data. I've been in a few trams which were missing in the KV78Turbo data. The strangest case was a tram which was recorded as being between stops F and G, but was actually still much earlier on the route, near stop B. Only after passing stop G, the data picked up correctly.</LI>
</UL>
Note that for KV78Turbo GVB metro, there is no data at all of the vehicles on the line. So the only data available is when a metro is scheduled to leave from the start of the line. Once the planned departure time has passed, the vehicle disappears. There is no data for any other stops, real-time or planned.

==Data formats==
OV-data is commonly stored in GTFS format or in the Transmodel 8.000 NL standard (TMI8). TMI8 defines a series of koppelvlakken (KV). The TMI8 standard is defined by the Platform Beheer Informatie Standaarden OV Nederland (BISON). The specs are fully open. OpenOV has some code to parse these different datasets.

The basic model of TMI8 consists of OV companies, like GVB; integrators, like 9292 (also known as Reisinformatiegroep/RIG) or the platform Grenzeloze Openbaar Vervoer Informatie (GOVI); and users, like app makers. The OV companies publish all their data in specific KV-datasets, like KV1 or KV19. This data is then aggregated by integrators, like 9292/RIG or GOVI. For example, they need to aggregate the stops: different OV companies may have different identifiers for the same stop. The integrators are intended to make the data agnostic in terms of which OV company is the source, and translate it to the most suitable KVs for users.
However, it does not seem like these roles are kept very strict: the data from GOVI is mostly in KVs intended for users, like 7 and 8, but the data from 9292 is mostly in the raw KVs, like KV6 or KV17.

The current standards defined by BISON are:
<table>
<thead>
<tr><th><b>Dataset</b></th>
<th><b>Type of data</b></th>
<th><b>Notes</b></th>
<th><b>Target groups</b></th>
</tr>
</thead>
<tbody>
<tr>
<td><b>KV1</b></td>
<td>Static planning and network data</td>
<td>Similar to GTFS in purpose, but different format</td>
<td>From OV company to integrator</td>
</tr>
<tr>
<td>KV4</td>
<td>Real-time platform data (which trip leaves from which platform) for station operators</td>
<td></td>
<td>From OV company to station operators</td>
</tr>
<tr>
<td><b>KV6</b></td>
<td>Real-time punctuality of trips: has data on progress of trip</td>
<td>Requires detailed knowledge of route to work out consequences for travellers</td>
<td>From OV company to integrator</td>
</tr>
<tr>
<td><b>KV7</b></td>
<td>Static planning and network data for stops</td>
<td>Usually used together with KV8</td>
<td>From integrator to data users</td>
</tr>
<tr>
<td><b>KV8</b></td>
<td>Real-time data for stops</td>
<td>Usually used together with KV7</td>
<td>From integrator to data users</td>
</tr>
<tr>
<td>KV9</td>
<td>Data for verkeerregelinstallaties (traffic lights, flexible barriers, etc.)</td>
<td></td>
<td>From road operators to OV companies</td>
</tr>
<tr>
<td><b>KV15</b></td>
<td>Free text to be shown at stops</td>
<td><br></td>
<td>From OV company to everyone</td>
</tr>
<tr>
<td><b>KV17</b></td>
<td>Traffic control mutations</td>
<td>For example, skipping a trip, cancelling a running trip, shortening a trip, delaying departure</td>
<td><span style="color: rgb(0, 0, 0); font-size: medium; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; display: inline !important; float: none;">From OV company to integrator</span><br></td>
</tr>
<tr>
<td><b>KV19</b></td>
<td>Real-time planned transit times of trips at stops</td>
<td>Can also be used to indicate that a stop was skipped</td>
<td><span style="color: rgb(0, 0, 0); font-size: medium; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; display: inline !important; float: none;">From OV company to integrator</span><br></td>
</tr>
<tr>
<td><b>KV20</b></td>
<td>Temporary mutations: changes planned typically a few days in advance</td>
<td>For example, dropping trips or shortening a line</td>
<td><br></td>
</tr>
<tr>
<td>Haltetoegankelijkheid</td>
<td>Fysieke haltestructuur en toegankelijkheid</td>
<td><br></td>
<td><br></td>
</tr>
<tr>
<td><b>PPT fase 1</b></td>
<td>Products, prices and tariffs</td>
<td><br></td>
<td><br></td>
</tr>
<tr>
<td>KV55</td>
<td>Current departure times for mobile applications, deprecated?</td>
<td>Custom standard for GOVI?</td>
<td><br></td>
</tr>
</tbody>
</table>	

The government is also working on setting op a ND-OV locket (nationale data OV). Current contestants for this role are RIG (9292) and Stichting OpenGeo (which runs OpenOV). They will be required to take and distribute all data and may charge a max of â‚¬ 1000/year. OpenGeo intends to provide best-effort KV1 and KV78 data as OpenOV, and KV1/KV6/KV15/KV17 under SLA with ND-OV.

==References==
<UL>
<LI>BISON standards: http://bison.connekt.nl/standaarden/</LI>
<LI>BISON architecture: http://bison.connekt.nl/www/filelib/file/BISON/Architectuur/Beschrijving%20BISON%20architectuur%20v1_1.pdf</LI>
<LI>9292 open data: http://9292opendata.org/</LI>
<LI>Documentation for KV78 from OpenOV: https://github.com/skywave/KV78Turbo-OVAPI/wiki</LI>
<LI>NS API: http://www.ns.nl/api/api</LI>
<LI>More explanation on koppelvlakken: http://www.wegenwiki.nl/Koppelvlak</LI>
<LI>Blog post with overview of many APIs: http://blog.onderweg.eu/2012/11/apis-voor-actuele-ov-informatie-in-nederland/</LI>
<LI>OpenOV mailing list: https://groups.google.com/forum/?fromgroups#!forum/openov</LI>
<LI>NS API mailing list: https://groups.google.com/forum/?fromgroups#!forum/ns-api</LI>
<LI>OpenGeo's ND-OV loket: http://loket.opengeo.nl</LI>
<LI>OpenOV docs on getting KV6 data through VPN from 9292: http://openov.nl/docs/9292-vpn-kv6.pdf</LI>
<LI>Instructions on building your own OpenOV KV78Turbo API (perhaps dated): http://www.ovstatus.nl/UbuntuServer-OpenOV-V3.pdf</LI>
<LI>Hoofdrailnet, the train lines covered by NS data: http://upload.wikimedia.org/wikipedia/commons/a/ad/Hoofdrailnet.png</LI>
</UL>
=Current state of Motorized traffic datasets for NL=
-To be added by Jonathan-
